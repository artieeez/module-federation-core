"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var B=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,r)=>(typeof require<"u"?require:e)[r]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+t+'" is not supported')});var _ansicolors = require('ansi-colors'); var _ansicolors2 = _interopRequireDefault(_ansicolors);var _path = require('path');var _rambda = require('rambda');var _unplugin = require('unplugin');var z={typesFolder:"@mf-types",deleteTypesFolder:!0,maxRetries:3},k=t=>{let e=t.split("@");return e[e.length-1]},C="file:",W=(t,e)=>{let r=k(e),o=new URL(r,C),s=o.pathname.split("/").slice(0,-1).join("/");return o.pathname=`${s}/${t.typesFolder}.zip`,o.protocol===C?o.pathname:o.href},Z=t=>Object.entries(t.moduleFederationConfig.remotes).reduce((e,[r,o])=>(e[r]=W(t,o),e),{}),F=t=>{if(!t.moduleFederationConfig)throw new Error("moduleFederationConfig is required");let e={...z,...t},r=Z(e);return{hostOptions:e,mapRemotesToDownload:r}};var _fs = require('fs');var _typescript = require('typescript'); var _typescript2 = _interopRequireDefault(_typescript);var J={tsConfigPath:"./tsconfig.json",typesFolder:"@mf-types",compiledTypesFolder:"compiled-types",deleteTypesFolder:!0,additionalFilesToCompile:[],compilerInstance:"tsc"},G=({tsConfigPath:t,typesFolder:e,compiledTypesFolder:r})=>{let o=_path.resolve.call(void 0, t),s=_typescript2.default.readConfigFile(o,_typescript2.default.sys.readFile),i=_typescript2.default.parseJsonConfigFileContent(s.config,_typescript2.default.sys,_path.dirname.call(void 0, o)),n=_path.join.call(void 0, i.options.outDir||"dist",e,r);return{...i.options,emitDeclarationOnly:!0,noEmit:!1,declaration:!0,outDir:n}},K=["ts","tsx","vue","svelte"],w=t=>{let e=process.cwd();for(let r of K){let o=_path.join.call(void 0, e,`${t}.${r}`);if(_fs.existsSync.call(void 0, o))return o}},Q=t=>Object.entries(t.moduleFederationConfig.exposes).reduce((e,[r,o])=>(e[r]=w(o)||w(_path.join.call(void 0, o,"index"))||o,e),{}),x=t=>{if(!t.moduleFederationConfig)throw new Error("moduleFederationConfig is required");let e={...J,...t},r=Q(e);return{tsConfig:G(e),mapComponentsToExpose:r,remoteOptions:e}};var _admzip = require('adm-zip'); var _admzip2 = _interopRequireDefault(_admzip);var _axios = require('axios'); var _axios2 = _interopRequireDefault(_axios);var _crypto = require('crypto');var _promises = require('fs/promises');var oe=/^\//,P=".d.ts",se=t=>{let{line:e}=t.file.getLineAndCharacterOfPosition(t.start);console.error(_ansicolors2.default.red(`TS Error ${t.code}':' ${_typescript2.default.flattenDiagnosticMessageText(t.messageText,_typescript2.default.sys.newLine)}`)),console.error(_ansicolors2.default.red(`         at ${t.file.fileName}:${e+1} typescript.sys.newLine`))},a=(t,e)=>_path.normalize.call(void 0, t.outDir.replace(e.compiledTypesFolder,"")),g=(t,e)=>_path.normalize.call(void 0, t.outDir.replace(e.compiledTypesFolder,"").replace(e.typesFolder,"")),ie=(t,e,r)=>{let o=_typescript2.default.createCompilerHost(e),s=o.writeFile,i=Object.fromEntries(Object.entries(t).map(([p,c])=>[_path.normalize.call(void 0, c),p])),n=a(e,r);return o.writeFile=(p,c,f,I,R,L)=>{s(p,c,f,I,R,L);for(let A of R||[]){let h=i[_path.normalize.call(void 0, A.fileName)];if(h){let v=_path.join.call(void 0, n,`${h}${P}`),_=_path.dirname.call(void 0, v),T=_path.relative.call(void 0, _,p).replace(P,"").replace(oe,"").split(_path.sep).join("/");s(v,`export * from './${T}';
export { default } from './${T}';`,f)}}},o},ne=t=>B("vue-tsc").createProgram(t),pe=(t,e)=>{switch(t.compilerInstance){case"vue-tsc":return ne(e);case"tsc":default:return _typescript2.default.createProgram(e)}},S=(t,e,r)=>{let o=ie(t,e,r),i={rootNames:[...Object.values(t),...r.additionalFilesToCompile],host:o,options:e},n=pe(r,i),{diagnostics:p=[]}=n.emit();p.forEach(se)};var de=(t,e)=>_path.join.call(void 0, t.replace(e.typesFolder,""),`${e.typesFolder}.zip`),b=async(t,e)=>{let r=a(t,e),o=new _admzip2.default;return o.addLocalFolder(r),o.writeZipPromise(de(r,e))},le=(t,e)=>r=>{throw{...r,message:`Network error: Unable to download federated mocks for '${t}' from '${e}' because '${r.message}'`}},y=async(t,e)=>{t.deleteTypesFolder&&await _promises.rm.call(void 0, e,{recursive:!0,force:!0}).catch(r=>console.error(_ansicolors2.default.red(`Unable to remove types folder, ${r}`)))},N=t=>{let e={},r={};return async([o,s])=>{e[s]=0;let i=_path.join.call(void 0, t.typesFolder,o);for(;e[s]++<t.maxRetries;)try{let n=await _axios2.default.get(s,{responseType:"arraybuffer"}).catch(le(o,s)),p=Buffer.from(n.data),c=_crypto.createHash.call(void 0, "sha256").update(p).digest("hex");r[s]!==c&&(await y(t,i),new (0, _admzip2.default)(p).extractAllTo(i,!0),r[s]=c);break}catch(n){if(console.error(_ansicolors2.default.red(`Error during types archive download: ${(n==null?void 0:n.message)||"unknown error"}`)),e[s]>=t.maxRetries)throw n}}};var _e=_unplugin.createUnplugin.call(void 0, t=>{let{remoteOptions:e,tsConfig:r,mapComponentsToExpose:o}=x(t),s=a(r,e);return{name:"native-federation-typescript/remote",async writeBundle(){try{S(o,r,e),await b(r,e),await y(e,s),console.log(_ansicolors2.default.green("Federated types created correctly"))}catch(i){console.error(_ansicolors2.default.red(`Unable to compile federated types, ${i}`))}},get vite(){return process.env.NODE_ENV==="production"?void 0:{buildStart:this.writeBundle,watchChange:this.writeBundle}},webpack(i){i.options.devServer=_rambda.mergeDeepRight.call(void 0, i.options.devServer||{},{static:{directory:_path.resolve.call(void 0, g(r,e))}})},rspack(i){i.options.devServer=_rambda.mergeDeepRight.call(void 0, i.options.devServer||{},{static:{directory:_path.resolve.call(void 0, g(r,e))}})}}}),Be= exports.b =_unplugin.createUnplugin.call(void 0, t=>{let{hostOptions:e,mapRemotesToDownload:r}=F(t),o=N(e);return{name:"native-federation-typescript/host",async writeBundle(){let s=Object.entries(r).map(o);await Promise.allSettled(s),console.log(_ansicolors2.default.green("Federated types extraction completed"))},get vite(){return process.env.NODE_ENV==="production"?void 0:{buildStart:this.writeBundle,watchChange:this.writeBundle}}}});exports.a = _e; exports.b = Be;
