export declare const createContainerCode = "\nimport bundler_runtime_base from '@module-federation/webpack-bundler-runtime';\n// import instantiatePatch from \"./federation.js\";\n\nconst createContainer = (federationOptions) => {\n  // await instantiatePatch(federationOptions, true);\n  const {exposes, name, remotes = [], shared, plugins} = federationOptions;\n\n  const __webpack_modules__ = {\n    \"./node_modules/.federation/entry.1f2288102e035e2ed66b2efaf60ad043.js\": (module, __webpack_exports__, __webpack_require__) => {\n      __webpack_require__.r(__webpack_exports__);\n      const bundler_runtime = __webpack_require__.n(bundler_runtime_base);\n      const prevFederation = __webpack_require__.federation;\n      __webpack_require__.federation = {};\n      for (const key in bundler_runtime()) {\n        __webpack_require__.federation[key] = bundler_runtime()[key];\n      }\n      for (const key in prevFederation) {\n        __webpack_require__.federation[key] = prevFederation[key];\n      }\n      if (!__webpack_require__.federation.instance) {\n        const pluginsToAdd = plugins || [];\n        __webpack_require__.federation.initOptions.plugins = __webpack_require__.federation.initOptions.plugins ?\n          __webpack_require__.federation.initOptions.plugins.concat(pluginsToAdd) : pluginsToAdd;\n        __webpack_require__.federation.instance = __webpack_require__.federation.runtime.init(__webpack_require__.federation.initOptions);\n        if (__webpack_require__.federation.attachShareScopeMap) {\n          __webpack_require__.federation.attachShareScopeMap(__webpack_require__);\n        }\n        if (__webpack_require__.federation.installInitialConsumes) {\n          __webpack_require__.federation.installInitialConsumes();\n        }\n      }\n    },\n\n    \"webpack/container/entry/createContainer\": (module, exports, __webpack_require__) => {\n      const moduleMap = {};\n      for (const key in exposes) {\n        if (Object.prototype.hasOwnProperty.call(exposes, key)) {\n          moduleMap[key] = () => Promise.resolve(exposes[key]()).then(m => () => m);\n        }\n      }\n\n      const get = (module, getScope) => {\n        __webpack_require__.R = getScope;\n        getScope = (\n          __webpack_require__.o(moduleMap, module)\n            ? moduleMap[module]()\n            : Promise.resolve().then(() => {\n              throw new Error(\"Module '\" + module + \"' does not exist in container.\");\n            })\n        );\n        __webpack_require__.R = undefined;\n        return getScope;\n      };\n      const init = (shareScope, initScope, remoteEntryInitOptions) => {\n        return __webpack_require__.federation.bundlerRuntime.initContainerEntry({\n          webpackRequire: __webpack_require__,\n          shareScope: shareScope,\n          initScope: initScope,\n          remoteEntryInitOptions: remoteEntryInitOptions,\n          shareScopeKey: \"default\"\n        });\n      };\n      __webpack_require__(\"./node_modules/.federation/entry.1f2288102e035e2ed66b2efaf60ad043.js\");\n\n      // This exports getters to disallow modifications\n      __webpack_require__.d(exports, {\n        get: () => get,\n        init: () => init,\n        moduleMap: () => moduleMap,\n      });\n    }\n  };\n\n  const __webpack_module_cache__ = {};\n\n  const __webpack_require__ = (moduleId) => {\n    let cachedModule = __webpack_module_cache__[moduleId];\n    if (cachedModule !== undefined) {\n      return cachedModule.exports;\n    }\n    let module = __webpack_module_cache__[moduleId] = {\n      id: moduleId,\n      loaded: false,\n      exports: {}\n    };\n\n    const execOptions = {\n      id: moduleId,\n      module: module,\n      factory: __webpack_modules__[moduleId],\n      require: __webpack_require__\n    };\n    __webpack_require__.i.forEach(handler => {\n      handler(execOptions);\n    });\n    module = execOptions.module;\n    execOptions.factory.call(module.exports, module, module.exports, execOptions.require);\n\n    module.loaded = true;\n\n    return module.exports;\n  };\n\n  __webpack_require__.m = __webpack_modules__;\n  __webpack_require__.c = __webpack_module_cache__;\n  __webpack_require__.i = [];\n\n  if (!__webpack_require__.federation) {\n    __webpack_require__.federation = {\n      initOptions: {\n        \"name\": name,\n        \"remotes\": remotes.map(remote => ({\n          \"type\": remote.type,\n          \"alias\": remote.alias,\n          \"name\": remote.name,\n          \"entry\": remote.entry,\n          \"shareScope\": remote.shareScope || \"default\"\n        }))\n      },\n      chunkMatcher: () => true,\n      rootOutputDir: \"\",\n      initialConsumes: undefined,\n      bundlerRuntimeOptions: {}\n    };\n  }\n\n  __webpack_require__.n = (module) => {\n    const getter = module && module.__esModule ? () => module['default'] : () => module;\n    __webpack_require__.d(getter, {a: getter});\n    return getter;\n  };\n\n  __webpack_require__.d = (exports, definition) => {\n    for (const key in definition) {\n      if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n        Object.defineProperty(exports, key, {enumerable: true, get: definition[key]});\n      }\n    }\n  };\n\n  __webpack_require__.f = {};\n\n  __webpack_require__.g = (() => {\n    if (typeof globalThis === 'object') return globalThis;\n    try {\n      return this || new Function('return this')();\n    } catch (e) {\n      if (typeof window === 'object') return window;\n    }\n  })();\n\n  __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\n  __webpack_require__.r = (exports) => {\n    if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n      Object.defineProperty(exports, Symbol.toStringTag, {value: 'Module'});\n    }\n    Object.defineProperty(exports, '__esModule', {value: true});\n  };\n\n  __webpack_require__.federation.initOptions.shared = shared;\n  __webpack_require__.S = {};\n  const initPromises = {};\n  const initTokens = {};\n  __webpack_require__.I = (name, initScope) => {\n    return __webpack_require__.federation.bundlerRuntime.I({\n      shareScopeName: name,\n      webpackRequire: __webpack_require__,\n      initPromises: initPromises,\n      initTokens: initTokens,\n      initScope: initScope,\n    });\n  };\n\n  const __webpack_exports__ = __webpack_require__(\"webpack/container/entry/createContainer\");\n  const __webpack_exports__get = __webpack_exports__.get;\n  const __webpack_exports__init = __webpack_exports__.init;\n  const __webpack_exports__moduleMap = __webpack_exports__.moduleMap;\n  return __webpack_exports__;\n}";
